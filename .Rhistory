ggplot2::facet_wrap(~marker, ncol = 5, scales = "free_x") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = "Mean animal length")
unique(split_plot$marker)
peaks
marker
# if I want parental pheno geno split, I need to  re-orderd so parental is first and not after IV qtl (bc its alphebetical)
# add to factor line:   levels = c("Parental", "IV:8696159" ," V:4035606", "X:4864961", "X:14038510")
split_plot$marker <- factor(split_plot$marker, levels = c("Parental", "IV:8696159" ," V:4035606", "X:4864961", "X:14038510"))
split_plot$genotype <- factor(split_plot$genotype, levels = c("N2", "CB4856" , "N2-RIAILs", "CB-RIAILs"))
ggplot2::ggplot(split_plot) +
ggplot2::aes(x = genotype, y = pheno) +
ggplot2::geom_jitter(ggplot2::aes(x = genotype, y = pheno), alpha = 1, size = 0.07, width = 0.1) +
ggplot2::geom_boxplot(ggplot2::aes(x = genotype, y = pheno, fill = genotype, alpha = 0.8), outlier.shape = NA) +
ggplot2::scale_fill_manual(values = c(`N2-RIAILs` = "orange", `CB-RIAILs` = "blue", "N2" = "orange", "CB4856" = "blue")) +
ggplot2::facet_wrap(~marker, ncol = 5, scales = "free_x") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = "Mean animal length")
# if I want parental pheno geno split, I need to  re-orderd so parental is first and not after IV qtl (bc its alphebetical)
# add to factor line:   levels = c("Parental", "IV:8696159" ," V:4035606", "X:4864961", "X:14038510")
split_plot$marker <- factor(split_plot$marker, levels = c("Parental", "IV:8696159" , "V:4035606", "X:4864961", "X:14038510"))
split_plot$genotype <- factor(split_plot$genotype, levels = c("N2", "CB4856" , "N2-RIAILs", "CB-RIAILs"))
ggplot2::ggplot(split_plot) +
ggplot2::aes(x = genotype, y = pheno) +
ggplot2::geom_jitter(ggplot2::aes(x = genotype, y = pheno), alpha = 1, size = 0.07, width = 0.1) +
ggplot2::geom_boxplot(ggplot2::aes(x = genotype, y = pheno, fill = genotype, alpha = 0.8), outlier.shape = NA) +
ggplot2::scale_fill_manual(values = c(`N2-RIAILs` = "orange", `CB-RIAILs` = "blue", "N2" = "orange", "CB4856" = "blue")) +
ggplot2::facet_wrap(~marker, ncol = 5, scales = "free_x") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = "Mean animal length")
mian_rel <- allRIAILsregressed %>%
dplyr::filter(condition == "mianserin"  & trait == t) %>%
dplyr::select("date": "phenotype")  %>%
dplyr::mutate(rel_pheno = ((phenotype - min(phenotype, na.rm = T)) / (max(phenotype, na.rm = T) - min(phenotype, na.rm = T)))) %>%
dplyr::mutate(phenotype = rel_pheno)
mian_mapcross <- linkagemapping::mergepheno(cross, mian_rel, set = 2)
mian_map <- mianannotatedmap %>%
dplyr::mutate(condition = "mianserin")
peaks <- mian_map %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
uniquemarkers <- gsub("-", "\\.", unique(peaks$marker))
colnames(mian_mapcross$pheno) <- gsub("-", "\\.", colnames(mian_mapcross$pheno))
pheno <- mian_mapcross$pheno %>%
dplyr::select_(mian_map$trait[1])
geno <- data.frame(linkagemapping:::extract_genotype(mian_mapcross)) %>%
dplyr::select(which(colnames(.) %in% uniquemarkers)) %>%
data.frame(., pheno)
colnames(geno)[1:(ncol(geno) - 1)] <- sapply(colnames(geno)[1:(ncol(geno) - 1)],
function(marker) {paste(unlist(peaks[peaks$marker == gsub("\\.", "-", marker),
c("chr", "pos")]), collapse = ":")})
colnames(geno)[ncol(geno)] <- "pheno"
split <- tidyr::gather(geno, marker, genotype, -pheno) %>%
tidyr::drop_na(genotype)
split$genotype <- sapply(split$genotype, function(x) {  # if i want to change it here?
if (x == -1) {
"N2-RIAILs"
}
else {
"CB-RIAILs"
}
})
# add parent phenotype
parpheno <- mian_rel %>%
dplyr::mutate(marker = "Parental") %>%
dplyr::mutate(genotype = strain) %>%
dplyr::select(pheno = phenotype, marker, genotype) %>%
dplyr::filter(genotype %in% c("N2", "CB4856"))
split <- split %>%
dplyr::bind_rows(parpheno)
split$genotype <- factor(split$genotype, levels = c("N2", "CB4856" , "N2-RIAILs", "CB-RIAILs"))
split_plot <- split %>%
tidyr::drop_na(genotype) %>%
dplyr::mutate(chr = (as.character(stringr::str_split_fixed(marker, ":", 2)[,1])),
pos = as.numeric(as.character(stringr::str_split_fixed(marker, ":", 2)[,2]))) %>%
dplyr::arrange(chr, pos)
# if I want parental pheno geno split, I need to  re-orderd so parental is first and not after IV qtl (bc its alphebetical)
# add to factor line:   levels = c("Parental", "IV:8696159" ," V:4035606", "X:4864961", "X:14038510")
split_plot$marker <- factor(split_plot$marker, levels = c("Parental", "IV:8696159" , "V:4035606", "X:4864961", "X:14038510"))
split_plot$genotype <- factor(split_plot$genotype, levels = c("N2", "CB4856" , "N2-RIAILs", "CB-RIAILs"))
ggplot2::ggplot(split_plot) +
ggplot2::aes(x = genotype, y = pheno) +
ggplot2::geom_jitter(ggplot2::aes(x = genotype, y = pheno), alpha = 1, size = 0.07, width = 0.1) +
ggplot2::geom_boxplot(ggplot2::aes(x = genotype, y = pheno, fill = genotype, alpha = 0.8), outlier.shape = NA) +
ggplot2::scale_fill_manual(values = c(`N2-RIAILs` = "orange", `CB-RIAILs` = "blue", "N2" = "orange", "CB4856" = "blue")) +
ggplot2::facet_wrap(~marker, ncol = 5, scales = "free_x") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = "Mean animal length")
############################
############################
# ~   figs for chr V
# ~   flx and mianserin
############################
############################
library(dplyr)
library(linkagemapping)
library(ggplot2)
library(cowplot)
library(tidyverse)
library(rio)
library(knitr)
# fluoxetine
load("/Users/loraina/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/fluoxetine.125-GWER.chromosomal.annotated.Rda")
flxannotatedmap <- annotatedmap
cross <- get(linkagemapping::load_cross_obj("N2xCB4856cross_full")) #this is the second one; full = 13k markers
load("/Users/loraina/Dropbox/AndersenLab/RCode/Linkage mapping/RIAILsMappings/RIAIL_data/allRIAILsregressed.Rda")
# for Mianserin
mianannotatedmap <- import("~/Dropbox/AndersenLab/RCode/Linkage mapping/RIAILsMappings/20180829/data/mianserin-GWER.chromosomal.annotated.Rda")
mianannotatedmap <- mianannotatedmap %>%
dplyr::filter(trait == "mianserin.mean.TOF")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
load("~/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/20210207_flxmian_regressed.Rda")
source("~/Dropbox/AndersenLab/LabFolders/Katie/scripts_kse/NIL_genotype_plots.R")
source("~/Dropbox/AndersenLab/LabFolders/Katie/scripts_kse/NIL_phenotype_plots.R")
source("~/Dropbox/AndersenLab/LabFolders/Loraina/Scripts/Base_theme.R")
tsize = 12
############################
############################
# ~   figs for chr V
# ~   flx and mianserin
############################
############################
library(dplyr)
library(linkagemapping)
library(ggplot2)
library(cowplot)
library(tidyverse)
library(rio)
library(knitr)
# fluoxetine
load("/Users/loraina/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/fluoxetine.125-GWER.chromosomal.annotated.Rda")
flxannotatedmap <- annotatedmap
cross <- get(linkagemapping::load_cross_obj("N2xCB4856cross_full")) #this is the second one; full = 13k markers
load("/Users/loraina/Dropbox/AndersenLab/RCode/Linkage mapping/RIAILsMappings/RIAIL_data/allRIAILsregressed.Rda")
# for Mianserin
mianannotatedmap <- import("~/Dropbox/AndersenLab/RCode/Linkage mapping/RIAILsMappings/20180829/data/mianserin-GWER.chromosomal.annotated.Rda")
mianannotatedmap <- mianannotatedmap %>%
dplyr::filter(trait == "mianserin.mean.TOF")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
load("~/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/20210207_flxmian_regressed.Rda")
source("~/Dropbox/AndersenLab/LabFolders/Katie/scripts_kse/NIL_genotype_plots.R")
source("~/Dropbox/AndersenLab/LabFolders/Katie/scripts_kse/NIL_phenotype_plots.R")
source("~/Dropbox/AndersenLab/LabFolders/Loraina/Scripts/Base_theme.R")
tsize = 12
flx_pheno_norm <- flx_pheno_norm %>%
ggplot2::ggplot(.) +
ggplot2::aes(x = strain, y = norm_pheno, fill = strain_fill, color = strain_fill) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::scale_fill_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
ggplot2::scale_color_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
theme_bw(tsize) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
panel.grid = element_blank(),
axis.title = element_text(face = "bold", color = "black"),
axis.text.y = element_text(face = "bold", color = "black"),
legend.position = "none") +
labs(x = "Strain", y = "Mean Animal Length")
#############
# adapted from LM plot function
max_lod <- flxannotatedmap %>%
dplyr::group_by(marker) %>%
dplyr::filter(lod ==  max(lod))
cis <- flxannotatedmap %>% # info for each QTL peak
dplyr::group_by(marker) %>%
dplyr::mutate(maxlod = max(lod)) %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
max_lod2 <- linkagemapping:::cidefiner(cis, max_lod) # confidence interval
plot_flxpeaks <- ggplot2::ggplot(max_lod2) +
ggplot2::aes(x = pos/1e+06, y = lod) +
ggplot2::geom_ribbon(ggplot2::aes(x = pos/1e+06, ymin = 0, ymax = ci_lod), fill = "blue", alpha = 0.5) +
ggplot2::geom_point(data = cis, # triable
ggplot2::aes(x = pos/1e+06, y = (1.05 * maxlod)),
fill = "red", shape = 25, size = 3.2, show.legend = FALSE) +
ggplot2::geom_text(data = cis, # percents
ggplot2::aes(x = pos/1e+06, y = (1.2 * maxlod),
label = paste0(100 * round(var_exp, digits = 4), "%")),
colour = "black",
size = tsize/4, hjust = "inward")
flx_maxlod <- plot_flxpeaks + ggplot2::geom_line(size = 1, alpha = 0.85) +
ggplot2::facet_grid(. ~ chr, scales = "free", space = "free") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::scale_colour_discrete(name = "Mapping\nIteration") +
#ggplot2::ggtitle(max_lod2$trait[1]) +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.x = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.y = ggplot2::element_text(face = "bold",  color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = "black",  size = 1.2))
flx_maxlod
# does not include parental
# adapted from linkage mapping code and relative pheno from Katie's zinc paper
rel_riail <- allRIAILsregressed %>%
dplyr::filter(condition == "fluoxetine-125"  & trait == t) %>%
dplyr::mutate(condition = str_replace_all(condition, pattern="fluoxetine-125", replacement="fluoxetine.125")) %>%
dplyr::select("date": "phenotype")  %>%
dplyr::mutate(rel_pheno = ((phenotype - min(phenotype, na.rm = T)) / (max(phenotype, na.rm = T) - min(phenotype, na.rm = T)))) %>%
dplyr::mutate(phenotype = rel_pheno)
mapcross <- linkagemapping::mergepheno(cross, rel_riail, set = 2) # merge makes all _ back into .
flx_map <- flxannotatedmap %>% #flxanntotateedmap traits are annoying
dplyr::mutate(condition = "fluoxetine.125") %>%
dplyr::filter(trait == "fluoxetine.125.mean.TOF") # here
peaks <- flx_map %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
uniquemarkers <- gsub("-", "\\.", unique(peaks$marker))
colnames(mapcross$pheno) <- gsub("-", "\\.", colnames(mapcross$pheno))
pheno <- mapcross$pheno %>% # issue here
dplyr::select_(flx_map$trait[1]) # only trait option bc filtered from above
geno <- data.frame(linkagemapping:::extract_genotype(mapcross)) %>%
dplyr::select(which(colnames(.) %in% uniquemarkers)) %>%
data.frame(., pheno)
colnames(geno)[1:(ncol(geno) - 1)] <- sapply(colnames(geno)[1:(ncol(geno) - 1)],
function(marker) {paste(unlist(peaks[peaks$marker == gsub("\\.", "-", marker),
c("chr", "pos")]), collapse = ":")})
colnames(geno)[ncol(geno)] <- "pheno"
split <- tidyr::gather(geno, marker, genotype, -pheno) %>%
tidyr::drop_na(genotype)
split$genotype <- sapply(split$genotype, function(x) {
if (x == -1) {
"N2-RIAILs"
}
else {
"CB-RIAILs"
}
})
#get rid of parent pheno
split$genotype <- factor(split$genotype, levels = c( "N2-RIAILs", "CB-RIAILs"))
split <- split %>%
tidyr::drop_na(genotype) %>%
dplyr::mutate(chr = (as.character(stringr::str_split_fixed(marker, ":", 2)[,1])),
pos = as.numeric(as.character(stringr::str_split_fixed(marker, ":", 2)[,2]))) %>%
dplyr::arrange(chr, pos)
# setting levels myself --> if i do this for a dfferent trait it wont work ,
split$marker <- factor(split$marker, levels = c("Parental","IV:15790605", "V:3944185", "V:8387899"))
pxg <- ggplot2::ggplot(split) +
ggplot2::aes(x = genotype, y = pheno) +
ggplot2::geom_jitter(ggplot2::aes(x = genotype, y = pheno), alpha = 1, size = 0.07, width = 0.1) +
ggplot2::geom_boxplot(ggplot2::aes(x = genotype, y = pheno, fill = genotype, alpha = 0.8), outlier.shape = NA) +
ggplot2::scale_fill_manual(values = c(`N2-RIAILs` = "orange", `CB-RIAILs` = "blue", "N2" = "orange", "CB4856" = "blue")) +
ggplot2::facet_wrap(~marker, ncol = 5, scales = "free_x") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = "Mean animal length")
# cowplot
cowplot::plot_grid(flx_pheno_norm, flx_maxlod, pxg, nrow = 3, align = "v", axis = "lr", labels = c("A", "B", "C"))
ggsave("~/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/figures/flx_riail_lod_pxg.png", width = 7.5, height = 8)
ggsave("~/Dropbox/AndersenLab/LabFolders/Loraina/Projects/chrV/Sorter_data/figures/flx_riail_lod_pxg_short.png", width = 7.5, height = 4)
max_lod <- flxannotatedmap %>%
dplyr::group_by(marker) %>%
dplyr::filter(lod ==  max(lod))
cis <- flxannotatedmap %>% # info for each QTL peak
dplyr::group_by(marker) %>%
dplyr::mutate(maxlod = max(lod)) %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
max_lod2 <- linkagemapping:::cidefiner(cis, max_lod) # confidence interval
plot_flxpeaks <- ggplot2::ggplot(max_lod2) +
ggplot2::aes(x = pos/1e+06, y = lod) +
ggplot2::geom_ribbon(ggplot2::aes(x = pos/1e+06, ymin = 0, ymax = ci_lod), fill = "blue", alpha = 0.5) +
ggplot2::geom_point(data = cis, # triable
ggplot2::aes(x = pos/1e+06, y = (1.05 * maxlod)),
fill = "red", shape = 25, size = 3.2, show.legend = FALSE) +
ggplot2::geom_text(data = cis, # percents
ggplot2::aes(x = pos/1e+06, y = (1.2 * maxlod),
label = paste0(100 * round(var_exp, digits = 4), "%")),
colour = "black",
size = tsize/4, hjust = "inward")
flx_maxlod <- plot_flxpeaks + ggplot2::geom_line(size = 1, alpha = 0.85) +
ggplot2::facet_grid(. ~ chr, scales = "free", space = "free") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::scale_colour_discrete(name = "Mapping\nIteration") +
#ggplot2::ggtitle(max_lod2$trait[1]) +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.x = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.y = ggplot2::element_text(face = "bold",  color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = "black",  size = 1.2))
flx_maxlod
uniquemarkers
view(max_lod)
mian_pheno <- allRIAILsregressed %>%
dplyr::filter(condition == "mianserin" & trait =="mean.TOF") %>%
dplyr::select("condition","trait", "strain", "phenotype")
# trait
t <- "mean.TOF"
### plot riail phenos
mian_pheno_norm <- mian_pheno %>%
dplyr::mutate(strain_fill = dplyr::case_when(strain == "N2" ~ "n2",
strain == "CB4856" ~ "cb",
TRUE ~ "RIL")) %>%
dplyr::group_by(strain, trait) %>%
dplyr::mutate(avg_phen = mean(phenotype, na.rm = T)) %>%
dplyr::distinct(strain, trait, .keep_all = T) %>%
dplyr::ungroup() %>% #normalized phenotypes next line
dplyr::mutate(norm_pheno = ((avg_phen - min(avg_phen, na.rm = T)) / (max(avg_phen, na.rm = T) - min(avg_phen, na.rm = T)))) %>%
dplyr::arrange(norm_pheno)
mian_pheno_norm$strain <- factor(mian_pheno_norm$strain, levels = unique(mian_pheno_norm$strain))
# number of strains more resistant than N2
n2 <- mian_pheno_norm %>%
dplyr::filter(strain == "N2") %>%
dplyr::pull(norm_pheno)
hyperres <- mian_pheno_norm %>%
dplyr::filter(norm_pheno > n2) %>%
dplyr::pull(strain)
#length(hyperres)/nrow(mian_pheno_norm) # %
# number of strains more sensitive than CB
cb <- mian_pheno_norm %>%
dplyr::filter(strain == "CB4856") %>%
dplyr::pull(norm_pheno)
hypersen <- mian_pheno_norm %>%
dplyr::filter(norm_pheno < cb) %>%
dplyr::pull(strain)
#length(hypersen)/nrow(mian_pheno_norm) #  %
#(length(hyperres)+length(hypersen))/nrow(mian_pheno_norm) #89% #
# just looking at distribution of the other rials
mian_pheno_norm %>%
ggplot2::ggplot(.) +
ggplot2::aes(x = strain, y = norm_pheno, fill = strain_fill, color = strain_fill) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::scale_fill_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
ggplot2::scale_color_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
theme_bw(tsize) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
panel.grid = element_blank(),
axis.title = element_text(face = "bold", color = "black"),
axis.text.y = element_text(face = "bold", color = "black"),
legend.position = "none") +
labs(x = "Strain", y = "Mean Animal Length")
max_lod <- mianannotatedmap %>%
dplyr::group_by(marker) %>%
dplyr::filter(lod ==  max(lod))
cis <- mianannotatedmap %>% # info for each QTL peak
dplyr::group_by(marker) %>%
dplyr::mutate(maxlod = max(lod)) %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
max_lod2 <- linkagemapping:::cidefiner(cis, max_lod)
plot_mianpeaks <- ggplot2::ggplot(max_lod2) +
ggplot2::aes(x = pos/1e+06, y = lod) +
ggplot2::geom_ribbon(ggplot2::aes(x = pos/1e+06, ymin = 0, ymax = ci_lod), fill = "blue", alpha = 0.5) +
ggplot2::geom_point(data = cis, # triable
ggplot2::aes(x = pos/1e+06, y = (1.05 * maxlod)),
fill = "red", shape = 25, size = 3.2, show.legend = FALSE) +
ggplot2::geom_text(data = cis, # percents
ggplot2::aes(x = pos/1e+06, y = (1.2 * maxlod),
label = paste0(100 * round(var_exp, digits = 4), "%")),
colour = "black",
size = tsize/4, hjust = "inward")
mian_maxlod <- plot_mianpeaks + ggplot2::geom_line(size = 1, alpha = 0.85) +
ggplot2::facet_grid(. ~ chr, scales = "free", space = "free") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::scale_colour_discrete(name = "Mapping\nIteration") +
#ggplot2::ggtitle(max_lod2$trait[1]) +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.x = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.y = ggplot2::element_text(face = "bold",  color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = "black",  size = 1.2))
mian_maxlod
cis
t <- "mean.TOF"
flx_pheno <- allRIAILsregressed %>%
dplyr::filter(condition == "fluoxetine-125"  & trait == t) %>%
dplyr::mutate(condition = str_replace_all(condition, pattern="fluoxetine-125", replacement="fluoxetine.125")) %>%
dplyr::select("condition","trait", "strain", "phenotype")
### plot riail phenos
flx_pheno_norm <- flx_pheno %>%
dplyr::mutate(strain_fill = dplyr::case_when(strain == "N2" ~ "n2",
strain == "CB4856" ~ "cb",
TRUE ~ "RIL")) %>%
dplyr::group_by(strain, trait) %>%
dplyr::mutate(avg_phen = mean(phenotype, na.rm = T)) %>%
dplyr::distinct(strain, trait, .keep_all = T) %>%
dplyr::ungroup() %>% #normalized phenotypes next line
dplyr::mutate(norm_pheno = ((avg_phen - min(avg_phen, na.rm = T)) / (max(avg_phen, na.rm = T) - min(avg_phen, na.rm = T)))) %>%
dplyr::arrange(norm_pheno)
flx_pheno_norm$strain <- factor(flx_pheno_norm$strain, levels = unique(flx_pheno_norm$strain))
# number of strains more resistant than N2
n2 <- flx_pheno_norm %>%
dplyr::filter(strain == "N2") %>%
dplyr::pull(norm_pheno)
flx_pheno_norm <- flx_pheno_norm %>%
ggplot2::ggplot(.) +
ggplot2::aes(x = strain, y = norm_pheno, fill = strain_fill, color = strain_fill) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::scale_fill_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
ggplot2::scale_color_manual(values = c("n2" = "orange", "cb" = "blue", "RIL" = "grey")) +
theme_bw(tsize) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
panel.grid = element_blank(),
axis.title = element_text(face = "bold", color = "black"),
axis.text.y = element_text(face = "bold", color = "black"),
legend.position = "none") +
labs(x = "Strain", y = "Mean Animal Length")
max_lod <- flxannotatedmap %>%
dplyr::group_by(marker) %>%
dplyr::filter(lod ==  max(lod))
cis <- flxannotatedmap %>% # info for each QTL peak
dplyr::group_by(marker) %>%
dplyr::mutate(maxlod = max(lod)) %>%
dplyr::group_by(iteration) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
cis
max_lod2 <- linkagemapping:::cidefiner(cis, max_lod) # confidence interval
plot_flxpeaks <- ggplot2::ggplot(max_lod2) +
ggplot2::aes(x = pos/1e+06, y = lod) +
ggplot2::geom_ribbon(ggplot2::aes(x = pos/1e+06, ymin = 0, ymax = ci_lod), fill = "blue", alpha = 0.5) +
ggplot2::geom_point(data = cis, # triable
ggplot2::aes(x = pos/1e+06, y = (1.05 * maxlod)),
fill = "red", shape = 25, size = 3.2, show.legend = FALSE) +
ggplot2::geom_text(data = cis, # percents
ggplot2::aes(x = pos/1e+06, y = (1.2 * maxlod),
label = paste0(100 * round(var_exp, digits = 4), "%")),
colour = "black",
size = tsize/4, hjust = "inward")
flx_maxlod <- plot_flxpeaks + ggplot2::geom_line(size = 1, alpha = 0.85) +
ggplot2::facet_grid(. ~ chr, scales = "free", space = "free") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::scale_colour_discrete(name = "Mapping\nIteration") +
#ggplot2::ggtitle(max_lod2$trait[1]) +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.x = ggplot2::element_text(face = "bold",  color = "black"),
strip.text.y = ggplot2::element_text(face = "bold",  color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = "black",  size = 1.2))
flx_maxlod
max_lod2$trait[1]
view(flxannotatedmap)
